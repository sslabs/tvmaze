plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-kapt"
    id "dagger.hilt.android.plugin"
    id "androidx.navigation.safeargs.kotlin"
}

android {
    compileSdk rootProject.ext.targetSdk

    defaultConfig {
        applicationId "org.sslabs.tvmaze"
        minSdk rootProject.ext.minSdk
        targetSdk rootProject.ext.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental"   : "true"]
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = "11"
    }
    buildFeatures {
        viewBinding true
    }
    namespace 'org.sslabs.tvmaze'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // AndroidX core
    implementation "androidx.core:core-ktx:$androidx_core"
    implementation "androidx.appcompat:appcompat:$appcompat"

    // Constraint layout
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"

    // Fragment extensions
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_ktx"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_ktx"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_ktx"

    // Material design
    implementation "com.google.android.material:material:$material"

    // Coordinator layout
    implementation "androidx.coordinatorlayout:coordinatorlayout:$coordinator_layout"

    // Dialogs
    implementation "com.afollestad.material-dialogs:core:$material_dialogs"

    // Navigator
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$navigation"
    androidTestImplementation "androidx.navigation:navigation-testing:$navigation"

    // Biometric
    implementation "androidx.biometric:biometric:$biometric"

    // Preference
    implementation "androidx.preference:preference-ktx:$preference"

    // Data store
    implementation "androidx.datastore:datastore-preferences:$datastore"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-fragment:$androidx_hilt"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-compiler:$hilt_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Timber
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Core unit test libraries
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockWebServer"
    testImplementation "androidx.arch.core:core-testing:$arch_core"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test"

    // Core android test libraries
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_ext_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"

}